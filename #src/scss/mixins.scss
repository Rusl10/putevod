//Подключение шрифта
@mixin font($font_name, $file_name, $weight, $style) {
    @font-face {
        font-family: $font_name;
        font-display: swap;
        src: url("../fonts/#{$file_name}.woff") format("woff"),
        url("../fonts/#{$file_name}.woff2") format("woff2");
        font-weight: #{$weight};
        font-style: #{$style};
    }
}

//Адаптивный шрифт
@mixin adaptiv-font($pcSize, $mobSize, $maxSize) {
    $addSize: $pcSize - $mobSize;

    @if $maxSize==1 {
        //Только если меньше контейнера
        font-size: $pcSize + px;

        @media (max-width: #{$maxWidthContainer + px}) {
            font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    }

    @else if $maxSize==2 {
        //Только если больше контейнера
        font-size: $pcSize + px;

        @media (min-width: #{$maxWidthContainer + px}) {
            font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    }

    @else {
        //Всегда
        font-size: calc(#{$mobSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}

//Адаптивное свойство
@mixin adaptiv-value($property, $startSize, $minSize, $type) {
    $addSize: $startSize - $minSize;

    @if $type==1 {
        //Только если меньше контейнера
        #{$property}: $startSize + px;

        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidthContainer - 320}));
        }
    }

    @else if $type==2 {
        //Только если больше контейнера
        #{$property}: $startSize + px;

        @media (min-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
        }
    }

    @else {
        //Всегда
        #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - 320px) / #{$maxWidth - 320}));
    }
}

@mixin adaptiv-value2($property, $startSize, $minSize, $minWidth, $type) {
    $addSize: $startSize - $minSize;

    // for content in container
    @if $type==1 {
        //Только если меньше контейнера
        #{$property}: $startSize + px;

        @media (max-width: #{$maxWidthContainer + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidthContainer - $minWidth}));
        }
    }


    // for sections paddings or section decor images
    @else {

        @media (min-width: #{$maxWidth + px}) {

            #{$property}: $startSize + px;

        }

        @media screen and (min-width: #{$minWidth + px}) and (max-width: #{$maxWidth + px}) {
            #{$property}: calc(#{$minSize + px} + #{$addSize} * ((100vw - #{$minWidth + px}) / #{$maxWidth - $minWidth}));
        }


    }
}


@mixin from-to($min_width, $max_width) {
    @media screen and (min-width: $min_width) and (max-width: $max_width) {
        @content;
    }
}